# Parser generated by nitcc for the grammar minilang
import nitcc_runtime
class Parser_minilang
	super Parser
	redef fun start_state do return state_Start
end
redef class Object
	private fun state_Start: LRStateStart do return once new LRStateStart
	private fun state_stmts: LRStatestmts do return once new LRStatestmts
	private fun state_stmt: LRStatestmt do return once new LRStatestmt
	private fun state__39dif_39d: LRState_39dif_39d do return once new LRState_39dif_39d
	private fun state__39dwhile_39d: LRState_39dwhile_39d do return once new LRState_39dwhile_39d
	private fun state__39dprint_39d: LRState_39dprint_39d do return once new LRState_39dprint_39d
	private fun state_id: LRStateid do return once new LRStateid
	private fun state__39dint_39d: LRState_39dint_39d do return once new LRState_39dint_39d
	private fun state_stmts_32dEof: LRStatestmts_32dEof do return once new LRStatestmts_32dEof
	private fun state_stmts_32dstmt: LRStatestmts_32dstmt do return once new LRStatestmts_32dstmt
	private fun state__39dif_39d_32d_39d_40d_39d: LRState_39dif_39d_32d_39d_40d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d
	private fun state__39dwhile_39d_32d_39d_40d_39d: LRState_39dwhile_39d_32d_39d_40d_39d do return once new LRState_39dwhile_39d_32d_39d_40d_39d
	private fun state__39dprint_39d_32d_39d_40d_39d: LRState_39dprint_39d_32d_39d_40d_39d do return once new LRState_39dprint_39d_32d_39d_40d_39d
	private fun state_id_32d_39d_61d_39d: LRStateid_32d_39d_61d_39d do return once new LRStateid_32d_39d_61d_39d
	private fun state__39dint_39d_32did: LRState_39dint_39d_32did do return once new LRState_39dint_39d_32did
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond: LRState_39dif_39d_32d_39d_40d_39d_32dcond do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr: LRState_39dif_39d_32d_39d_40d_39d_32dexpr do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d4 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d4
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d: LRState_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d: LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32did: LRState_39dif_39d_32d_39d_40d_39d_32did do return once new LRState_39dif_39d_32d_39d_40d_39d_32did
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d: LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dint: LRState_39dif_39d_32d_39d_40d_39d_32dint do return once new LRState_39dif_39d_32d_39d_40d_39d_32dint
	private fun state__39dwhile_39d_32d_39d_40d_39d_32dcond: LRState_39dwhile_39d_32d_39d_40d_39d_32dcond do return once new LRState_39dwhile_39d_32d_39d_40d_39d_32dcond
	private fun state__39dprint_39d_32d_39d_40d_39d_32dexpr: LRState_39dprint_39d_32d_39d_40d_39d_32dexpr do return once new LRState_39dprint_39d_32d_39d_40d_39d_32dexpr
	private fun state__39dprint_39d_32d_39d_40d_39d_32dstr: LRState_39dprint_39d_32d_39d_40d_39d_32dstr do return once new LRState_39dprint_39d_32d_39d_40d_39d_32dstr
	private fun state_id_32d_39d_61d_39d_32dexpr: LRStateid_32d_39d_61d_39d_32dexpr do return once new LRStateid_32d_39d_61d_39d_32dexpr
	private fun state__39dint_39d_32did_32d_39d_59d_39d: LRState_39dint_39d_32did_32d_39d_59d_39d do return once new LRState_39dint_39d_32did_32d_39d_59d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d_32dexpr_95d4: LRState_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d_32dexpr_95d4 do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d_32dexpr_95d4
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4: LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4 do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d: LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d
	private fun state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d: LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d do return once new LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d
	private fun state__39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d: LRState_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d do return once new LRState_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d
	private fun state__39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d: LRState_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d do return once new LRState_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d
	private fun state_id_32d_39d_61d_39d_32dexpr_32d_39d_59d_39d: LRStateid_32d_39d_61d_39d_32dexpr_32d_39d_59d_39d do return once new LRStateid_32d_39d_61d_39d_32dexpr_32d_39d_59d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d_32dexpr: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d_32dexpr do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d_32dexpr
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d_32dexpr: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d_32dexpr do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d_32dexpr
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d_32dexpr: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d_32dexpr do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d_32dexpr
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d_32dexpr: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d_32dexpr do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d_32dexpr
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d_32dexpr: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d_32dexpr do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d_32dexpr
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d_32dexpr: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d_32dexpr do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d_32dexpr
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d_32dexpr_95d4: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d_32dexpr_95d4 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d_32dexpr_95d4
	private fun state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d_32dexpr_95d4: LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d_32dexpr_95d4 do return once new LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d_32dexpr_95d4
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4_32d_39d_41d_39d: LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4_32d_39d_41d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4_32d_39d_41d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d_32d_39d_41d_39d: LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d_32d_39d_41d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d_32d_39d_41d_39d
	private fun state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d: LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d do return once new LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d
	private fun state__39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d_32d_39d_59d_39d: LRState_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d_32d_39d_59d_39d do return once new LRState_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d_32d_39d_59d_39d
	private fun state__39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d_32d_39d_59d_39d: LRState_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d_32d_39d_59d_39d do return once new LRState_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d_32d_39d_59d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts
	private fun state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts: LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts do return once new LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	private fun state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d: LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d do return once new LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	private fun state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse: LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse do return once new LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse
	private fun goto_Nstmts: Goto_Nstmts do return once new Goto_Nstmts
	private fun goto_Ncond: Goto_Ncond do return once new Goto_Ncond
	private fun goto_Nstmt: Goto_Nstmt do return once new Goto_Nstmt
	private fun goto_Nelse: Goto_Nelse do return once new Goto_Nelse
	private fun goto_Nexpr: Goto_Nexpr do return once new Goto_Nexpr
	private fun goto_Nexpr_95d2: Goto_Nexpr_95d2 do return once new Goto_Nexpr_95d2
	private fun goto_Nexpr_95d3: Goto_Nexpr_95d3 do return once new Goto_Nexpr_95d3
	private fun goto_Nexpr_95d4: Goto_Nexpr_95d4 do return once new Goto_Nexpr_95d4
	private fun goto_N_start: Goto_N_start do return once new Goto_N_start
end
redef class NToken
	# guarded action for state Start
	# 5 shift(s) and 0 reduce(s)
	private fun action_sStart(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state stmts
	# 6 shift(s) and 0 reduce(s)
	private fun action_sstmts(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'while'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dwhile_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'print'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dprint_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state id
	# 1 shift(s) and 0 reduce(s)
	private fun action_sid(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'int'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dint_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '('
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'while' '('
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dwhile_39d_32d_39d_40d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'print' '('
	# 6 shift(s) and 0 reduce(s)
	private fun action_s_39dprint_39d_32d_39d_40d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state id '='
	# 5 shift(s) and 0 reduce(s)
	private fun action_sid_32d_39d_61d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'int' id
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dint_39d_32did(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr
	# 6 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr_2
	# 3 shift(s) and 1 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2(parser: Parser) do
		# REDUCE expr::expr_0=expr_2
		var n0 = parser.pop.as(Nexpr)
		var prod = n0
		parser.node_stack.push prod
		parser.goto(goto_Nexpr)
	end
	# guarded action for state 'if' '(' expr_3
	# 2 shift(s) and 1 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3(parser: Parser) do
		# REDUCE expr_2::expr_2_3=expr_3
		var n0 = parser.pop.as(Nexpr)
		var prod = n0
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d2)
	end
	# guarded action for state 'if' '(' '-'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' '('
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' 'read'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32d_39dread_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'while' '(' cond
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'print' '(' expr
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dprint_39d_32d_39d_40d_39d_32dexpr(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'print' '(' str
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dprint_39d_32d_39d_40d_39d_32dstr(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state id '=' expr
	# 1 shift(s) and 0 reduce(s)
	private fun action_sid_32d_39d_61d_39d_32dexpr(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr '=='
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr '!='
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr '<='
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr '>='
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr '<'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr '>'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr_2 '%'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr_2 '*'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr_2 '/'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr_3 '+'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr_3 '-'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' '(' expr_4
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' 'read' '('
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'while' '(' cond ')'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'print' '(' expr ')'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'print' '(' str ')'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' expr_2 '%' expr_3
	# 2 shift(s) and 1 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3(parser: Parser) do
		# REDUCE expr_2::expr_mod=expr_2 '%' expr_3
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_37d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Nexpr_mod(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d2)
	end
	# guarded action for state 'if' '(' expr_2 '*' expr_3
	# 2 shift(s) and 1 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3(parser: Parser) do
		# REDUCE expr_2::expr_mul=expr_2 '*' expr_3
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_42d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Nexpr_mul(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d2)
	end
	# guarded action for state 'if' '(' expr_2 '/' expr_3
	# 2 shift(s) and 1 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3(parser: Parser) do
		# REDUCE expr_2::expr_div=expr_2 '/' expr_3
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_47d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Nexpr_div(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d2)
	end
	# guarded action for state 'while' '(' cond ')' '{'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts
	# 6 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'while' '(' cond ')' '{' stmts
	# 6 shift(s) and 0 reduce(s)
	private fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}'
	# 1 shift(s) and 1 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d(parser: Parser) do
		# REDUCE else::else_none=
		var p1 = new Nelse_none
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nelse)
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else'
	# 2 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' 'if'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' '{'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '('
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' '{' stmts
	# 6 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')'
	# 1 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')' '{'
	# 5 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')' '{' stmts
	# 6 shift(s) and 0 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')' '{' stmts '}'
	# 1 shift(s) and 1 reduce(s)
	private fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d(parser: Parser) do
		# REDUCE else::else_none=
		var p1 = new Nelse_none
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nelse)
	end
end
class N_39d_61d_61d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d)
	end
	redef fun node_name do return "\'==\'"
end
class N_39d_33d_61d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d)
	end
	redef fun node_name do return "\'!=\'"
end
class N_39d_60d_61d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d)
	end
	redef fun node_name do return "\'<=\'"
end
class N_39d_62d_61d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d)
	end
	redef fun node_name do return "\'>=\'"
end
class N_39d_60d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d)
	end
	redef fun node_name do return "\'<\'"
end
class N_39d_62d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d)
	end
	redef fun node_name do return "\'>\'"
end
class N_39dif_39d
	super NToken
	redef fun action_sStart(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_sstmts(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dif_39d)
	end
	redef fun node_name do return "\'if\'"
end
class N_39d_40d_39d
	super NToken
	redef fun action_s_39dif_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dwhile_39d(parser) do
		parser.shift(state__39dwhile_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dprint_39d(parser) do
		parser.shift(state__39dprint_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_sid_32d_39d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39dread_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d)
	end
	redef fun node_name do return "\'(\'"
end
class N_39d_41d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond(parser) do
		parser.shift(state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d_32dexpr(parser) do
		parser.shift(state__39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d_32dstr(parser) do
		parser.shift(state__39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4_32d_39d_41d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d_32d_39d_41d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d)
	end
	redef fun node_name do return "\')\'"
end
class N_39d_123d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser) do
		parser.shift(state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d)
	end
	redef fun node_name do return "\'\{\'"
end
class N_39d_125d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d)
	end
	redef fun node_name do return "\'\}\'"
end
class N_39dwhile_39d
	super NToken
	redef fun action_sStart(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_sstmts(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dwhile_39d)
	end
	redef fun node_name do return "\'while\'"
end
class N_39dprint_39d
	super NToken
	redef fun action_sStart(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_sstmts(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dprint_39d)
	end
	redef fun node_name do return "\'print\'"
end
class N_39d_59d_39d
	super NToken
	redef fun action_s_39dint_39d_32did(parser) do
		parser.shift(state__39dint_39d_32did_32d_39d_59d_39d)
	end
	redef fun action_sid_32d_39d_61d_39d_32dexpr(parser) do
		parser.shift(state_id_32d_39d_61d_39d_32dexpr_32d_39d_59d_39d)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d(parser) do
		parser.shift(state__39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d_32d_39d_59d_39d)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d(parser) do
		parser.shift(state__39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d_32d_39d_59d_39d)
	end
	redef fun node_name do return "\';\'"
end
class Nstr
	super NToken
	redef fun action_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dprint_39d_32d_39d_40d_39d_32dstr)
	end
	redef fun node_name do return "str"
end
class Nid
	super NToken
	redef fun action_sStart(parser) do
		parser.shift(state_id)
	end
	redef fun action_sstmts(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dint_39d(parser) do
		parser.shift(state__39dint_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_sid_32d_39d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32did)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state_id)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state_id)
	end
	redef fun node_name do return "id"
end
class N_39d_61d_39d
	super NToken
	redef fun action_sid(parser) do
		parser.shift(state_id_32d_39d_61d_39d)
	end
	redef fun node_name do return "\'=\'"
end
class N_39dint_39d
	super NToken
	redef fun action_sStart(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_sstmts(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser) do
		parser.shift(state__39dint_39d)
	end
	redef fun node_name do return "\'int\'"
end
class N_39delse_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d)
	end
	redef fun node_name do return "\'else\'"
end
class N_39d_37d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d)
	end
	redef fun node_name do return "\'%\'"
end
class N_39d_42d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d)
	end
	redef fun node_name do return "\'*\'"
end
class N_39d_47d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d)
	end
	redef fun node_name do return "\'/\'"
end
class N_39d_43d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d)
	end
	redef fun node_name do return "\'+\'"
end
class N_39d_45d_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_sid_32d_39d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d)
	end
	redef fun node_name do return "\'-\'"
end
class N_39dread_39d
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_sid_32d_39d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32d_39dread_39d)
	end
	redef fun node_name do return "\'read\'"
end
class Nint
	super NToken
	redef fun action_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_sid_32d_39d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.shift(state__39dif_39d_32d_39d_40d_39d_32dint)
	end
	redef fun node_name do return "int"
end
redef class NEof
	super NToken
	redef fun action_sstmts(parser) do
		parser.shift(state_stmts_32dEof)
	end
	redef fun node_name do return "Eof"
end
redef class LRGoto
	private fun goto_sStart(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d(parser: Parser) do abort
	private fun goto_s_39dwhile_39d_32d_39d_40d_39d(parser: Parser) do abort
	private fun goto_s_39dprint_39d_32d_39d_40d_39d(parser: Parser) do abort
	private fun goto_sid_32d_39d_61d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser: Parser) do abort
	private fun goto_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser: Parser) do abort
	private fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser: Parser) do abort
end
class Goto_Nstmts
	super LRGoto
	redef fun goto_sStart(parser) do
		parser.push(state_stmts)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts)
	end
	redef fun goto_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.push(state__39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts)
	end
end
class Goto_Ncond
	super LRGoto
	redef fun goto_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dcond)
	end
	redef fun goto_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dwhile_39d_32d_39d_40d_39d_32dcond)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond)
	end
end
class Goto_Nstmt
	super LRGoto
	redef fun goto_sStart(parser) do
		parser.push(state_stmt)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.push(state_stmt)
	end
	redef fun goto_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.push(state_stmt)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser) do
		parser.push(state_stmt)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser) do
		parser.push(state_stmt)
	end
end
class Goto_Nelse
	super LRGoto
end
class Goto_Nexpr
	super LRGoto
	redef fun goto_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr)
	end
	redef fun goto_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr)
	end
	redef fun goto_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dprint_39d_32d_39d_40d_39d_32dexpr)
	end
	redef fun goto_sid_32d_39d_61d_39d(parser) do
		parser.push(state_id_32d_39d_61d_39d_32dexpr)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d_32dexpr)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d_32dexpr)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d_32dexpr)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d_32dexpr)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d_32dexpr)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d_32dexpr)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr)
	end
end
class Goto_Nexpr_95d2
	super LRGoto
	redef fun goto_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_sid_32d_39d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2)
	end
end
class Goto_Nexpr_95d3
	super LRGoto
	redef fun goto_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_sid_32d_39d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3)
	end
end
class Goto_Nexpr_95d4
	super LRGoto
	redef fun goto_s_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dwhile_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dprint_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_sid_32d_39d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
	redef fun goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
end
class Goto_N_start
	super LRGoto
end
class Nstmts
	super NProd
	redef fun node_name do return "stmts"
end
class Nstmts_95d0
	super Nstmts
	redef fun node_name do return "stmts_0"
	var n_stmt: Nstmt
	init(n_stmt: Nstmt) do
		self.n_stmt = n_stmt
	end
	redef fun number_of_children do return 1
	redef fun child(i) do
		if i == 0 then return n_stmt
		abort
	end
end
class Nstmts_95d1
	super Nstmts
	redef fun node_name do return "stmts_1"
	var n_stmts: Nstmts
	var n_stmt: Nstmt
	init(n_stmts: Nstmts, n_stmt: Nstmt) do
		self.n_stmts = n_stmts
		self.n_stmt = n_stmt
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_stmts
		if i == 1 then return n_stmt
		abort
	end
end
class Ncond
	super NProd
	redef fun node_name do return "cond"
end
class Ncond_eq
	super Ncond
	redef fun node_name do return "cond_eq"
	var n_left: Nexpr
	var n_1: N_39d_61d_61d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_61d_61d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Ncond_ne
	super Ncond
	redef fun node_name do return "cond_ne"
	var n_left: Nexpr
	var n_1: N_39d_33d_61d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_33d_61d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Ncond_lte
	super Ncond
	redef fun node_name do return "cond_lte"
	var n_left: Nexpr
	var n_1: N_39d_60d_61d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_60d_61d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Ncond_gte
	super Ncond
	redef fun node_name do return "cond_gte"
	var n_left: Nexpr
	var n_1: N_39d_62d_61d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_62d_61d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Ncond_lt
	super Ncond
	redef fun node_name do return "cond_lt"
	var n_left: Nexpr
	var n_1: N_39d_60d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_60d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Ncond_gt
	super Ncond
	redef fun node_name do return "cond_gt"
	var n_left: Nexpr
	var n_1: N_39d_62d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_62d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Nstmt
	super NProd
	redef fun node_name do return "stmt"
end
class Nstmt_if
	super Nstmt
	redef fun node_name do return "stmt_if"
	var n_0: N_39dif_39d
	var n_1: N_39d_40d_39d
	var n_cond: Ncond
	var n_3: N_39d_41d_39d
	var n_4: N_39d_123d_39d
	var n_stmts: Nstmts
	var n_6: N_39d_125d_39d
	var n_else: Nelse
	init(n_0: N_39dif_39d, n_1: N_39d_40d_39d, n_cond: Ncond, n_3: N_39d_41d_39d, n_4: N_39d_123d_39d, n_stmts: Nstmts, n_6: N_39d_125d_39d, n_else: Nelse) do
		self.n_0 = n_0
		self.n_1 = n_1
		self.n_cond = n_cond
		self.n_3 = n_3
		self.n_4 = n_4
		self.n_stmts = n_stmts
		self.n_6 = n_6
		self.n_else = n_else
	end
	redef fun number_of_children do return 8
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		if i == 2 then return n_cond
		if i == 3 then return n_3
		if i == 4 then return n_4
		if i == 5 then return n_stmts
		if i == 6 then return n_6
		if i == 7 then return n_else
		abort
	end
end
class Nstmt_while
	super Nstmt
	redef fun node_name do return "stmt_while"
	var n_0: N_39dwhile_39d
	var n_1: N_39d_40d_39d
	var n_cond: Ncond
	var n_3: N_39d_41d_39d
	var n_4: N_39d_123d_39d
	var n_stmts: Nstmts
	var n_6: N_39d_125d_39d
	init(n_0: N_39dwhile_39d, n_1: N_39d_40d_39d, n_cond: Ncond, n_3: N_39d_41d_39d, n_4: N_39d_123d_39d, n_stmts: Nstmts, n_6: N_39d_125d_39d) do
		self.n_0 = n_0
		self.n_1 = n_1
		self.n_cond = n_cond
		self.n_3 = n_3
		self.n_4 = n_4
		self.n_stmts = n_stmts
		self.n_6 = n_6
	end
	redef fun number_of_children do return 7
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		if i == 2 then return n_cond
		if i == 3 then return n_3
		if i == 4 then return n_4
		if i == 5 then return n_stmts
		if i == 6 then return n_6
		abort
	end
end
class Nstmt_print
	super Nstmt
	redef fun node_name do return "stmt_print"
	var n_0: N_39dprint_39d
	var n_1: N_39d_40d_39d
	var n_expr: Nexpr
	var n_3: N_39d_41d_39d
	var n_4: N_39d_59d_39d
	init(n_0: N_39dprint_39d, n_1: N_39d_40d_39d, n_expr: Nexpr, n_3: N_39d_41d_39d, n_4: N_39d_59d_39d) do
		self.n_0 = n_0
		self.n_1 = n_1
		self.n_expr = n_expr
		self.n_3 = n_3
		self.n_4 = n_4
	end
	redef fun number_of_children do return 5
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		if i == 2 then return n_expr
		if i == 3 then return n_3
		if i == 4 then return n_4
		abort
	end
end
class Nstmt_print_str
	super Nstmt
	redef fun node_name do return "stmt_print_str"
	var n_0: N_39dprint_39d
	var n_1: N_39d_40d_39d
	var n_str: Nstr
	var n_3: N_39d_41d_39d
	var n_4: N_39d_59d_39d
	init(n_0: N_39dprint_39d, n_1: N_39d_40d_39d, n_str: Nstr, n_3: N_39d_41d_39d, n_4: N_39d_59d_39d) do
		self.n_0 = n_0
		self.n_1 = n_1
		self.n_str = n_str
		self.n_3 = n_3
		self.n_4 = n_4
	end
	redef fun number_of_children do return 5
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		if i == 2 then return n_str
		if i == 3 then return n_3
		if i == 4 then return n_4
		abort
	end
end
class Nstmt_assign
	super Nstmt
	redef fun node_name do return "stmt_assign"
	var n_left: Nid
	var n_1: N_39d_61d_39d
	var n_right: Nexpr
	var n_3: N_39d_59d_39d
	init(n_left: Nid, n_1: N_39d_61d_39d, n_right: Nexpr, n_3: N_39d_59d_39d) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
		self.n_3 = n_3
	end
	redef fun number_of_children do return 4
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		if i == 3 then return n_3
		abort
	end
end
class Nstmt_decl
	super Nstmt
	redef fun node_name do return "stmt_decl"
	var n_0: N_39dint_39d
	var n_id: Nid
	var n_2: N_39d_59d_39d
	init(n_0: N_39dint_39d, n_id: Nid, n_2: N_39d_59d_39d) do
		self.n_0 = n_0
		self.n_id = n_id
		self.n_2 = n_2
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_id
		if i == 2 then return n_2
		abort
	end
end
class Nelse
	super NProd
	redef fun node_name do return "else"
end
class Nelse_none
	super Nelse
	redef fun node_name do return "else_none"
	init do end
	redef fun number_of_children do return 0
	redef fun child(i) do
		abort
	end
end
class Nelse_elseif
	super Nelse
	redef fun node_name do return "else_elseif"
	var n_0: N_39delse_39d
	var n_1: N_39dif_39d
	var n_2: N_39d_40d_39d
	var n_cond: Ncond
	var n_4: N_39d_41d_39d
	var n_5: N_39d_123d_39d
	var n_stmts: Nstmts
	var n_7: N_39d_125d_39d
	var n_else: Nelse
	init(n_0: N_39delse_39d, n_1: N_39dif_39d, n_2: N_39d_40d_39d, n_cond: Ncond, n_4: N_39d_41d_39d, n_5: N_39d_123d_39d, n_stmts: Nstmts, n_7: N_39d_125d_39d, n_else: Nelse) do
		self.n_0 = n_0
		self.n_1 = n_1
		self.n_2 = n_2
		self.n_cond = n_cond
		self.n_4 = n_4
		self.n_5 = n_5
		self.n_stmts = n_stmts
		self.n_7 = n_7
		self.n_else = n_else
	end
	redef fun number_of_children do return 9
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		if i == 2 then return n_2
		if i == 3 then return n_cond
		if i == 4 then return n_4
		if i == 5 then return n_5
		if i == 6 then return n_stmts
		if i == 7 then return n_7
		if i == 8 then return n_else
		abort
	end
end
class Nelse_else
	super Nelse
	redef fun node_name do return "else_else"
	var n_0: N_39delse_39d
	var n_1: N_39d_123d_39d
	var n_stmts: Nstmts
	var n_3: N_39d_125d_39d
	init(n_0: N_39delse_39d, n_1: N_39d_123d_39d, n_stmts: Nstmts, n_3: N_39d_125d_39d) do
		self.n_0 = n_0
		self.n_1 = n_1
		self.n_stmts = n_stmts
		self.n_3 = n_3
	end
	redef fun number_of_children do return 4
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		if i == 2 then return n_stmts
		if i == 3 then return n_3
		abort
	end
end
class Nexpr
	super NProd
	redef fun node_name do return "expr"
end
class Nexpr_mod
	super Nexpr
	redef fun node_name do return "expr_mod"
	var n_left: Nexpr
	var n_1: N_39d_37d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_37d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Nexpr_mul
	super Nexpr
	redef fun node_name do return "expr_mul"
	var n_left: Nexpr
	var n_1: N_39d_42d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_42d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Nexpr_div
	super Nexpr
	redef fun node_name do return "expr_div"
	var n_left: Nexpr
	var n_1: N_39d_47d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_47d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Nexpr_add
	super Nexpr
	redef fun node_name do return "expr_add"
	var n_left: Nexpr
	var n_1: N_39d_43d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_43d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Nexpr_sub
	super Nexpr
	redef fun node_name do return "expr_sub"
	var n_left: Nexpr
	var n_1: N_39d_45d_39d
	var n_right: Nexpr
	init(n_left: Nexpr, n_1: N_39d_45d_39d, n_right: Nexpr) do
		self.n_left = n_left
		self.n_1 = n_1
		self.n_right = n_right
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_left
		if i == 1 then return n_1
		if i == 2 then return n_right
		abort
	end
end
class Nexpr_neg
	super Nexpr
	redef fun node_name do return "expr_neg"
	var n_0: N_39d_45d_39d
	var n_expr_4: Nexpr
	init(n_0: N_39d_45d_39d, n_expr_4: Nexpr) do
		self.n_0 = n_0
		self.n_expr_4 = n_expr_4
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_expr_4
		abort
	end
end
class Nexpr_par
	super Nexpr
	redef fun node_name do return "expr_par"
	var n_0: N_39d_40d_39d
	var n_expr_4: Nexpr
	var n_2: N_39d_41d_39d
	init(n_0: N_39d_40d_39d, n_expr_4: Nexpr, n_2: N_39d_41d_39d) do
		self.n_0 = n_0
		self.n_expr_4 = n_expr_4
		self.n_2 = n_2
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_expr_4
		if i == 2 then return n_2
		abort
	end
end
class Nexpr_var
	super Nexpr
	redef fun node_name do return "expr_var"
	var n_id: Nid
	init(n_id: Nid) do
		self.n_id = n_id
	end
	redef fun number_of_children do return 1
	redef fun child(i) do
		if i == 0 then return n_id
		abort
	end
end
class Nexpr_read
	super Nexpr
	redef fun node_name do return "expr_read"
	var n_0: N_39dread_39d
	var n_1: N_39d_40d_39d
	var n_2: N_39d_41d_39d
	init(n_0: N_39dread_39d, n_1: N_39d_40d_39d, n_2: N_39d_41d_39d) do
		self.n_0 = n_0
		self.n_1 = n_1
		self.n_2 = n_2
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		if i == 2 then return n_2
		abort
	end
end
class Nexpr_int
	super Nexpr
	redef fun node_name do return "expr_int"
	var n_int: Nint
	init(n_int: Nint) do
		self.n_int = n_int
	end
	redef fun number_of_children do return 1
	redef fun child(i) do
		if i == 0 then return n_int
		abort
	end
end
class N_start
	super NProd
	redef fun node_name do return "_start"
end
class NStart
	super N_start
	redef fun node_name do return "Start"
	var n_0: Nstmts
	var n_1: NEof
	init(n_0: Nstmts, n_1: NEof) do
		self.n_0 = n_0
		self.n_1 = n_1
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		abort
	end
end
# State Start
private class LRStateStart
	super LRState
	redef fun to_s do return "Start"
	redef fun error_msg do return "stmts, stmt"
	redef fun action(parser) do
		parser.peek_token.action_sStart(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_sStart(parser)
	end
end
# State stmts
private class LRStatestmts
	super LRState
	redef fun to_s do return "stmts"
	redef fun error_msg do return "stmt"
	redef fun action(parser) do
		parser.peek_token.action_sstmts(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_stmts_32dstmt)
	end
end
# State stmt
private class LRStatestmt
	super LRState
	redef fun to_s do return "stmt"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmts::stmts_0=stmt
		var n0 = parser.pop.as(Nstmt)
		var p1 = new Nstmts_95d0(n0)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmts)
	end
end
# State 'if'
private class LRState_39dif_39d
	super LRState
	redef fun to_s do return "\'if\'"
	redef fun error_msg do return "\'(\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d(parser)
	end
end
# State 'while'
private class LRState_39dwhile_39d
	super LRState
	redef fun to_s do return "\'while\'"
	redef fun error_msg do return "\'(\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dwhile_39d(parser)
	end
end
# State 'print'
private class LRState_39dprint_39d
	super LRState
	redef fun to_s do return "\'print\'"
	redef fun error_msg do return "\'(\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dprint_39d(parser)
	end
end
# State id
private class LRStateid
	super LRState
	redef fun to_s do return "id"
	redef fun error_msg do return "\'=\'"
	redef fun action(parser) do
		parser.peek_token.action_sid(parser)
	end
end
# State 'int'
private class LRState_39dint_39d
	super LRState
	redef fun to_s do return "\'int\'"
	redef fun error_msg do return "id"
	redef fun action(parser) do
		parser.peek_token.action_s_39dint_39d(parser)
	end
end
# State stmts Eof
private class LRStatestmts_32dEof
	super LRState
	redef fun to_s do return "stmts Eof"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE _start::Start=stmts Eof
		var n1 = parser.pop.as(NEof)
		var n0 = parser.pop.as(Nstmts)
		var p1 = new NStart(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.stop = true
	end
end
# State stmts stmt
private class LRStatestmts_32dstmt
	super LRState
	redef fun to_s do return "stmts stmt"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmts::stmts_1=stmts stmt
		var n1 = parser.pop.as(Nstmt)
		var n0 = parser.pop.as(Nstmts)
		var p1 = new Nstmts_95d1(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmts)
	end
end
# State 'if' '('
private class LRState_39dif_39d_32d_39d_40d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\'"
	redef fun error_msg do return "cond, expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d(parser)
	end
end
# State 'while' '('
private class LRState_39dwhile_39d_32d_39d_40d_39d
	super LRState
	redef fun to_s do return "\'while\' \'(\'"
	redef fun error_msg do return "cond, expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dwhile_39d_32d_39d_40d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dwhile_39d_32d_39d_40d_39d(parser)
	end
end
# State 'print' '('
private class LRState_39dprint_39d_32d_39d_40d_39d
	super LRState
	redef fun to_s do return "\'print\' \'(\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dprint_39d_32d_39d_40d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dprint_39d_32d_39d_40d_39d(parser)
	end
end
# State id '='
private class LRStateid_32d_39d_61d_39d
	super LRState
	redef fun to_s do return "id \'=\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_sid_32d_39d_61d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_sid_32d_39d_61d_39d(parser)
	end
end
# State 'int' id
private class LRState_39dint_39d_32did
	super LRState
	redef fun to_s do return "\'int\' id"
	redef fun error_msg do return "\';\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dint_39d_32did(parser)
	end
end
# State 'if' '(' cond
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond"
	redef fun error_msg do return "\')\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond(parser)
	end
end
# State 'if' '(' expr
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr"
	redef fun error_msg do return "\'==\', \'!=\', \'<=\', \'>=\', \'<\', \'>\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr(parser)
	end
end
# State 'if' '(' expr_2
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_2"
	redef fun error_msg do return "\'%\', \'*\', \'/\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2(parser)
	end
end
# State 'if' '(' expr_3
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_3"
	redef fun error_msg do return "\'+\', \'-\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3(parser)
	end
end
# State 'if' '(' expr_4
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d4
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_4"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_3::expr_3_2=expr_4
		var n0 = parser.pop.as(Nexpr)
		var prod = n0
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d3)
	end
end
# State 'if' '(' '-'
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'-\'"
	redef fun error_msg do return "expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d_32dexpr_95d4)
	end
end
# State 'if' '(' '('
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'(\'"
	redef fun error_msg do return "expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4)
	end
end
# State 'if' '(' id
private class LRState_39dif_39d_32d_39d_40d_39d_32did
	super LRState
	redef fun to_s do return "\'if\' \'(\' id"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_4::expr_var=id
		var n0 = parser.pop.as(Nid)
		var p1 = new Nexpr_var(n0)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d4)
	end
end
# State 'if' '(' 'read'
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'read\'"
	redef fun error_msg do return "\'(\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32d_39dread_39d(parser)
	end
end
# State 'if' '(' int
private class LRState_39dif_39d_32d_39d_40d_39d_32dint
	super LRState
	redef fun to_s do return "\'if\' \'(\' int"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_4::expr_int=int
		var n0 = parser.pop.as(Nint)
		var p1 = new Nexpr_int(n0)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d4)
	end
end
# State 'while' '(' cond
private class LRState_39dwhile_39d_32d_39d_40d_39d_32dcond
	super LRState
	redef fun to_s do return "\'while\' \'(\' cond"
	redef fun error_msg do return "\')\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dwhile_39d_32d_39d_40d_39d_32dcond(parser)
	end
end
# State 'print' '(' expr
private class LRState_39dprint_39d_32d_39d_40d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'print\' \'(\' expr"
	redef fun error_msg do return "\')\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dprint_39d_32d_39d_40d_39d_32dexpr(parser)
	end
end
# State 'print' '(' str
private class LRState_39dprint_39d_32d_39d_40d_39d_32dstr
	super LRState
	redef fun to_s do return "\'print\' \'(\' str"
	redef fun error_msg do return "\')\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dprint_39d_32d_39d_40d_39d_32dstr(parser)
	end
end
# State id '=' expr
private class LRStateid_32d_39d_61d_39d_32dexpr
	super LRState
	redef fun to_s do return "id \'=\' expr"
	redef fun error_msg do return "\';\'"
	redef fun action(parser) do
		parser.peek_token.action_sid_32d_39d_61d_39d_32dexpr(parser)
	end
end
# State 'int' id ';'
private class LRState_39dint_39d_32did_32d_39d_59d_39d
	super LRState
	redef fun to_s do return "\'int\' id \';\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmt::stmt_decl='int' id ';'
		var n2 = parser.pop.as(N_39d_59d_39d)
		var n1 = parser.pop.as(Nid)
		var n0 = parser.pop.as(N_39dint_39d)
		var p1 = new Nstmt_decl(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmt)
	end
end
# State 'if' '(' cond ')'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\'"
	redef fun error_msg do return "\'\{\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser)
	end
end
# State 'if' '(' expr '=='
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'==\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d(parser)
	end
end
# State 'if' '(' expr '!='
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'!=\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d(parser)
	end
end
# State 'if' '(' expr '<='
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'<=\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d(parser)
	end
end
# State 'if' '(' expr '>='
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'>=\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d(parser)
	end
end
# State 'if' '(' expr '<'
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'<\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d(parser)
	end
end
# State 'if' '(' expr '>'
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'>\'"
	redef fun error_msg do return "expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d(parser)
	end
end
# State 'if' '(' expr_2 '%'
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_2 \'%\'"
	redef fun error_msg do return "expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d(parser)
	end
end
# State 'if' '(' expr_2 '*'
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_2 \'*\'"
	redef fun error_msg do return "expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d(parser)
	end
end
# State 'if' '(' expr_2 '/'
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_2 \'/\'"
	redef fun error_msg do return "expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d(parser)
	end
end
# State 'if' '(' expr_3 '+'
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_3 \'+\'"
	redef fun error_msg do return "expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d_32dexpr_95d4)
	end
end
# State 'if' '(' expr_3 '-'
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_3 \'-\'"
	redef fun error_msg do return "expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d_32dexpr_95d4)
	end
end
# State 'if' '(' '-' expr_4
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39d_45d_39d_32dexpr_95d4
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'-\' expr_4"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_4::expr_neg='-' expr_4
		var n1 = parser.pop.as(Nexpr)
		var n0 = parser.pop.as(N_39d_45d_39d)
		var p1 = new Nexpr_neg(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d4)
	end
end
# State 'if' '(' '(' expr_4
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'(\' expr_4"
	redef fun error_msg do return "\')\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4(parser)
	end
end
# State 'if' '(' 'read' '('
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'read\' \'(\'"
	redef fun error_msg do return "\')\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d(parser)
	end
end
# State 'while' '(' cond ')'
private class LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d
	super LRState
	redef fun to_s do return "\'while\' \'(\' cond \')\'"
	redef fun error_msg do return "\'\{\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser)
	end
end
# State 'print' '(' expr ')'
private class LRState_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d
	super LRState
	redef fun to_s do return "\'print\' \'(\' expr \')\'"
	redef fun error_msg do return "\';\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d(parser)
	end
end
# State 'print' '(' str ')'
private class LRState_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d
	super LRState
	redef fun to_s do return "\'print\' \'(\' str \')\'"
	redef fun error_msg do return "\';\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d(parser)
	end
end
# State id '=' expr ';'
private class LRStateid_32d_39d_61d_39d_32dexpr_32d_39d_59d_39d
	super LRState
	redef fun to_s do return "id \'=\' expr \';\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmt::stmt_assign=id '=' expr ';'
		var n3 = parser.pop.as(N_39d_59d_39d)
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_61d_39d)
		var n0 = parser.pop.as(Nid)
		var p1 = new Nstmt_assign(n0, n1, n2, n3)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmt)
	end
end
# State 'if' '(' cond ')' '{'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\'"
	redef fun error_msg do return "stmts, stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser)
	end
end
# State 'if' '(' expr '==' expr
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_61d_61d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'==\' expr"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE cond::cond_eq=expr '==' expr
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_61d_61d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Ncond_eq(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncond)
	end
end
# State 'if' '(' expr '!=' expr
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_33d_61d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'!=\' expr"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE cond::cond_ne=expr '!=' expr
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_33d_61d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Ncond_ne(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncond)
	end
end
# State 'if' '(' expr '<=' expr
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_61d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'<=\' expr"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE cond::cond_lte=expr '<=' expr
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_60d_61d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Ncond_lte(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncond)
	end
end
# State 'if' '(' expr '>=' expr
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_61d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'>=\' expr"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE cond::cond_gte=expr '>=' expr
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_62d_61d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Ncond_gte(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncond)
	end
end
# State 'if' '(' expr '<' expr
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_60d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'<\' expr"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE cond::cond_lt=expr '<' expr
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_60d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Ncond_lt(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncond)
	end
end
# State 'if' '(' expr '>' expr
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_32d_39d_62d_39d_32dexpr
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr \'>\' expr"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE cond::cond_gt=expr '>' expr
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_62d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Ncond_gt(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncond)
	end
end
# State 'if' '(' expr_2 '%' expr_3
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_2 \'%\' expr_3"
	redef fun error_msg do return "\'+\', \'-\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_37d_39d_32dexpr_95d3(parser)
	end
end
# State 'if' '(' expr_2 '*' expr_3
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_2 \'*\' expr_3"
	redef fun error_msg do return "\'+\', \'-\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_42d_39d_32dexpr_95d3(parser)
	end
end
# State 'if' '(' expr_2 '/' expr_3
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_2 \'/\' expr_3"
	redef fun error_msg do return "\'+\', \'-\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dexpr_95d2_32d_39d_47d_39d_32dexpr_95d3(parser)
	end
end
# State 'if' '(' expr_3 '+' expr_4
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_43d_39d_32dexpr_95d4
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_3 \'+\' expr_4"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_3::expr_add=expr_3 '+' expr_4
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_43d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Nexpr_add(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d3)
	end
end
# State 'if' '(' expr_3 '-' expr_4
private class LRState_39dif_39d_32d_39d_40d_39d_32dexpr_95d3_32d_39d_45d_39d_32dexpr_95d4
	super LRState
	redef fun to_s do return "\'if\' \'(\' expr_3 \'-\' expr_4"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_3::expr_sub=expr_3 '-' expr_4
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_45d_39d)
		var n0 = parser.pop.as(Nexpr)
		var p1 = new Nexpr_sub(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d3)
	end
end
# State 'if' '(' '(' expr_4 ')'
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39d_40d_39d_32dexpr_95d4_32d_39d_41d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'(\' expr_4 \')\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_4::expr_par='(' expr_4 ')'
		var n2 = parser.pop.as(N_39d_41d_39d)
		var n1 = parser.pop.as(Nexpr)
		var n0 = parser.pop.as(N_39d_40d_39d)
		var p1 = new Nexpr_par(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d4)
	end
end
# State 'if' '(' 'read' '(' ')'
private class LRState_39dif_39d_32d_39d_40d_39d_32d_39dread_39d_32d_39d_40d_39d_32d_39d_41d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' \'read\' \'(\' \')\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE expr_4::expr_read='read' '(' ')'
		var n2 = parser.pop.as(N_39d_41d_39d)
		var n1 = parser.pop.as(N_39d_40d_39d)
		var n0 = parser.pop.as(N_39dread_39d)
		var p1 = new Nexpr_read(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nexpr_95d4)
	end
end
# State 'while' '(' cond ')' '{'
private class LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d
	super LRState
	redef fun to_s do return "\'while\' \'(\' cond \')\' \'\{\'"
	redef fun error_msg do return "stmts, stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser)
	end
end
# State 'print' '(' expr ')' ';'
private class LRState_39dprint_39d_32d_39d_40d_39d_32dexpr_32d_39d_41d_39d_32d_39d_59d_39d
	super LRState
	redef fun to_s do return "\'print\' \'(\' expr \')\' \';\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmt::stmt_print='print' '(' expr ')' ';'
		var n4 = parser.pop.as(N_39d_59d_39d)
		var n3 = parser.pop.as(N_39d_41d_39d)
		var n2 = parser.pop.as(Nexpr)
		var n1 = parser.pop.as(N_39d_40d_39d)
		var n0 = parser.pop.as(N_39dprint_39d)
		var p1 = new Nstmt_print(n0, n1, n2, n3, n4)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmt)
	end
end
# State 'print' '(' str ')' ';'
private class LRState_39dprint_39d_32d_39d_40d_39d_32dstr_32d_39d_41d_39d_32d_39d_59d_39d
	super LRState
	redef fun to_s do return "\'print\' \'(\' str \')\' \';\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmt::stmt_print_str='print' '(' str ')' ';'
		var n4 = parser.pop.as(N_39d_59d_39d)
		var n3 = parser.pop.as(N_39d_41d_39d)
		var n2 = parser.pop.as(Nstr)
		var n1 = parser.pop.as(N_39d_40d_39d)
		var n0 = parser.pop.as(N_39dprint_39d)
		var p1 = new Nstmt_print_str(n0, n1, n2, n3, n4)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmt)
	end
end
# State 'if' '(' cond ')' '{' stmts
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts"
	redef fun error_msg do return "stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_stmts_32dstmt)
	end
end
# State 'while' '(' cond ')' '{' stmts
private class LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts
	super LRState
	redef fun to_s do return "\'while\' \'(\' cond \')\' \'\{\' stmts"
	redef fun error_msg do return "stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_stmts_32dstmt)
	end
end
# State 'if' '(' cond ')' '{' stmts '}'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\'"
	redef fun error_msg do return "else"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse)
	end
end
# State 'while' '(' cond ')' '{' stmts '}'
private class LRState_39dwhile_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	super LRState
	redef fun to_s do return "\'while\' \'(\' cond \')\' \'\{\' stmts \'\}\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmt::stmt_while='while' '(' cond ')' '{' stmts '}'
		var n6 = parser.pop.as(N_39d_125d_39d)
		var n5 = parser.pop.as(Nstmts)
		var n4 = parser.pop.as(N_39d_123d_39d)
		var n3 = parser.pop.as(N_39d_41d_39d)
		var n2 = parser.pop.as(Ncond)
		var n1 = parser.pop.as(N_39d_40d_39d)
		var n0 = parser.pop.as(N_39dwhile_39d)
		var p1 = new Nstmt_while(n0, n1, n2, n3, n4, n5, n6)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmt)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' else
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' else"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE stmt::stmt_if='if' '(' cond ')' '{' stmts '}' else
		var n7 = parser.pop.as(Nelse)
		var n6 = parser.pop.as(N_39d_125d_39d)
		var n5 = parser.pop.as(Nstmts)
		var n4 = parser.pop.as(N_39d_123d_39d)
		var n3 = parser.pop.as(N_39d_41d_39d)
		var n2 = parser.pop.as(Ncond)
		var n1 = parser.pop.as(N_39d_40d_39d)
		var n0 = parser.pop.as(N_39dif_39d)
		var p1 = new Nstmt_if(n0, n1, n2, n3, n4, n5, n6, n7)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nstmt)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\'"
	redef fun error_msg do return "\'if\', \'\{\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d(parser)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\'"
	redef fun error_msg do return "\'(\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d(parser)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' '{'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'\{\'"
	redef fun error_msg do return "stmts, stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d(parser)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '('
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\' \'(\'"
	redef fun error_msg do return "cond, expr, expr_2, expr_3, expr_4"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d(parser)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' '{' stmts
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'\{\' stmts"
	redef fun error_msg do return "stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_stmts_32dstmt)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\' \'(\' cond"
	redef fun error_msg do return "\')\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond(parser)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' '{' stmts '}'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'\{\' stmts \'\}\'"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE else::else_else='else' '{' stmts '}'
		var n3 = parser.pop.as(N_39d_125d_39d)
		var n2 = parser.pop.as(Nstmts)
		var n1 = parser.pop.as(N_39d_123d_39d)
		var n0 = parser.pop.as(N_39delse_39d)
		var p1 = new Nelse_else(n0, n1, n2, n3)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nelse)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\' \'(\' cond \')\'"
	redef fun error_msg do return "\'\{\'"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d(parser)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')' '{'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\' \'(\' cond \')\' \'\{\'"
	redef fun error_msg do return "stmts, stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d(parser)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')' '{' stmts
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\' \'(\' cond \')\' \'\{\' stmts"
	redef fun error_msg do return "stmt"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_stmts_32dstmt)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')' '{' stmts '}'
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\' \'(\' cond \')\' \'\{\' stmts \'\}\'"
	redef fun error_msg do return "else"
	redef fun action(parser) do
		parser.peek_token.action_s_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state__39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse)
	end
end
# State 'if' '(' cond ')' '{' stmts '}' 'else' 'if' '(' cond ')' '{' stmts '}' else
private class LRState_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32d_39delse_39d_32d_39dif_39d_32d_39d_40d_39d_32dcond_32d_39d_41d_39d_32d_39d_123d_39d_32dstmts_32d_39d_125d_39d_32delse
	super LRState
	redef fun to_s do return "\'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' \'else\' \'if\' \'(\' cond \')\' \'\{\' stmts \'\}\' else"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE else::else_elseif='else' 'if' '(' cond ')' '{' stmts '}' else
		var n8 = parser.pop.as(Nelse)
		var n7 = parser.pop.as(N_39d_125d_39d)
		var n6 = parser.pop.as(Nstmts)
		var n5 = parser.pop.as(N_39d_123d_39d)
		var n4 = parser.pop.as(N_39d_41d_39d)
		var n3 = parser.pop.as(Ncond)
		var n2 = parser.pop.as(N_39d_40d_39d)
		var n1 = parser.pop.as(N_39dif_39d)
		var n0 = parser.pop.as(N_39delse_39d)
		var p1 = new Nelse_elseif(n0, n1, n2, n3, n4, n5, n6, n7, n8)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nelse)
	end
end
